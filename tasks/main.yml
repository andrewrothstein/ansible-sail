---
- name: Resolve platform specific vars
  ansible.builtin.include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'
- name: Check for install at {{ sail_install_ver_dir }}
  become: true
  ansible.builtin.stat:
    path: '{{ sail_install_ver_dir }}'
  changed_when: false
  register: sail_binary
- name: Downloading and installing sail
  when: not sail_binary.stat.exists
  block:
    - name: Download tgz
      become: true
      become_user: root
      ansible.builtin.get_url:
        url: '{{ sail_url }}'
        dest: '{{ sail_tmp_file }}'
        checksum: '{{ sail_checksum }}'
        mode: '644'
    - name: Mkdir versioned install directory
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ sail_install_ver_dir }}'
        state: directory
        mode: '755'
    - name: Installing andrewrothstein.unarchivedeps
      ansible.builtin.include_role:
        name: andrewrothstein.unarchivedeps
    - name: Unarchive
      become: true
      become_user: root
      ansible.builtin.unarchive:
        remote_src: true
        src: '{{ sail_tmp_file }}'
        dest: '{{ sail_install_ver_dir }}'
        creates: '{{ sail_install_ver_dir }}/sail'
  always:
    - name: Cleanup
      become: true
      become_user: root
      ansible.builtin.file:
        path: '{{ sail_tmp_file }}'
        state: absent
- name: Link...
  become: true
  become_user: root
  ansible.builtin.file:
    src: '{{ sail_install_ver_dir }}/sail'
    dest: '{{ sail_install_dir }}/sail'
    state: link
